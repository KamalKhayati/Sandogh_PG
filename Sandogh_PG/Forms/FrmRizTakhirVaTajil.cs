using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using DevExpress.XtraGrid.Views.Grid;

namespace Sandogh_PG.Forms
{
    public partial class FrmRizTakhirVaTajil : DevExpress.XtraEditors.XtraForm
    {
        public FrmRizTakhirVaTajil()
        {
            InitializeComponent();
            //        // This line of code is generated by Data Source Configuration Wizard
            //        // Instantiate a new DBContext
            //        Sandogh_PG.MyContext dbContext = new Sandogh_PG.MyContext();
            //        // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            //        dbContext.AazaSandoghs.LoadAsync().ContinueWith(loadTask =>
            //        {
            //// Bind data to control when loading complete
            //aazaSandoghsBindingSource.DataSource = dbContext.AazaSandoghs.Local.ToBindingList();
            //        }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }
        FrmNobatVam Fm;
        public FrmRizTakhirVaTajil(FrmNobatVam fm)
        {
            InitializeComponent();
            Fm = fm;
        }

        private void FrmRizTakhirVaTajil_Load(object sender, EventArgs e)
        {

        }

        private void gridView_CustomDrawRowIndicator(object sender, DevExpress.XtraGrid.Views.Grid.RowIndicatorCustomDrawEventArgs e)
        {
            GridView view = sender as GridView;
            HelpClass1.CustomDrawRowIndicator(sender, e, view);

        }

        private void gridView_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.Control && e.KeyCode == Keys.E)
            {
                HelpClass1.ExportDataGridViewToExcel(this, gridView, gridView.RowCount);
            }

        }

        private void gridView_RowCellStyle(object sender, RowCellStyleEventArgs e)
        {
            GridView view = sender as GridView;
            if (view.RowCount > 0)
            {
                // bool IsActive = Convert.ToBoolean(view.GetRowCellValue(e.RowHandle, "IsActive"));
                //int TakhirVaTajil = Convert.ToInt32(view.GetRowCellValue(e.RowHandle, "TedadeFarzand"));

                if (e.Column.FieldName == "TedadeFarzand")
                {
                    if (Convert.ToInt32(e.CellValue) < 0)
                    {
                        Color foreColor = Color.Red;
                        e.Appearance.ForeColor = foreColor;
                        //e.Appearance.BackColor = Color.LightYellow;
                    }
                    else
                    {
                        Color foreColor = Color.Black;
                        e.Appearance.ForeColor = foreColor;
                    }

                }
                else
                {
                    Color foreColor = Color.Black;
                    e.Appearance.ForeColor = foreColor;
                }

            }

        }
    }
}